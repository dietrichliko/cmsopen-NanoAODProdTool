#!/bin/bash -x
#
# Run nanoaodplus using CMSCONNECT
#
# Dietrich Liko, June 2022

export JOB_NUMBER=$1
export FIRST_FILE=$2
export LAST_FILE=$3

. /cvmfs/cms.cern.ch/cmsset_default.sh

# unpack sandbox - no need to do more as cmssw is on cvmfs
scramv1 project CMSSW {{cmssw}}
tar xzf sandbox.tar.gz
if [ $? -ne 0 ]; then
    echo "Error unpacking sandbox" >&2
    exit 1
fi

read -u 3 uuid 3< /proc/sys/kernel/random/uuid
OUTPUT_URL="{{output_url}}/${uuid^^}.root"
BACKUP_URL="{{backup_url}}/${uuid^^}.root"

(
    cd {{cmssw}}/src
    eval `scramv1 runtime -sh`

    cp ../../poet_cfg.py .
    cp ../../file_index.txt .
    tar xzvf ../../conddb.tar.gz

    cmsRun poet_cfg.py {{dataflag}}
    if [ $? -ne 0 ]; then
        echo "Error cmsRun poet_cfg.py" >&2
        exit 1
    fi

    mv output.root ../..
)

(
    set +x 
    . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_98python3 x86_64-slc6-gcc8-opt
    set -x
    ./metadata_poet output.root "$OUTPUT_URL" "$FIRST_FILE" "$LAST_FILE"
)

xrdcp --nopbar --retry 3 --cksum adler32:print output.root "$OUTPUT_URL"
if [ $? -ne 0 ]; then
    xrdcp --nopbar --retry 3 --cksum adler32:print output.root "$BACKUP_URL"
    if [ $? -ne 0 ]; then
        exit 1
    fi
fi
